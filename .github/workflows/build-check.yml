name: build-ci-check

on: [pull_request]

jobs:
  build:
    runs-on: [ self-hosted, label-go ]

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Create env file
        run: |
          touch scribble/.env
          echo "${{ secrets.NAVER_API_CLIENT_ID }}" >> .env
          echo "${{ secrets.NAVER_API_CLIENT_SECRET }}" >> .env
          echo "${{ secrets.SECRET_KEY }}" >> .env
          echo "${{ secrets.RUN_ENV }}" >> .env
          echo "${{ secrets.DOMAIN }}" >> .env
          echo "${{ secrets.PROD_ALLOWED_HOSTS }}" >> .env
          echo "${{ secrets.CORS_ORIGIN_WHITELIST }}" >> .env
          echo "${{ secrets.DB_NAME }}" >> .env
          echo "${{ secrets.DB_USER }}" >> .env
          echo "${{ secrets.DB_HOST }}" >> .env
          echo "${{ secrets.DB_PASSWORD }}" >> .env

      - name: Setup python
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"

      - name: Install docker setup script
        run: sh setup.sh

      - name: Access server and Build container
        run: |
          docker rmi -f $(docker images -f "dangling=true" -q)
          $(
            docker ps -q -a | wc -l
            if [ $? -gt 0 ]
            then
              echo "More than one container is running..."
              docker-compose down
            fi
          )
          docker-compose up -d --build
          echo "Build Complete"

      - name: Check docker container running
        run: |
          echo $(
            docker ps --format "{{.Names}} {{.Status}}" | grep "Up" -c
            if [ ? -ne 3 ]; then
              show_error "Build Error while running docker-compose"
              exit 1
            else
              echo "Deploy Complete"
            fi
          )
