# Generated by Django 4.0.4 on 2022-06-01 10:16

import apps.users.models
import api.contents.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(max_length=255, validators=[api.users.validators.EmailDomainValidator(allowlist=['naver.com', 'gmail.com', 'outlook.com', 'daum.net', 'hanmail.net', 'nate.com', 'hotmail.com', 'icloud.com'])], verbose_name='이메일')),
                ('nickname', models.CharField(max_length=15, unique=True, verbose_name='닉네임')),
                ('profile_image', models.URLField(blank=True, null=True, verbose_name='프로필 사진')),
                ('category', models.JSONField(default=dict, validators=[api.users.validators.CategoryValidator(['국내소설', '외국소설(유럽,북미등)', '외국소설(아시아)', '경제/경영', '자기계발', '역사', '종교', '정치/사회', '예술/대중문화', '과학', '기술/공학', '컴퓨터/IT'])])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '사용자',
                'verbose_name_plural': '사용자',
                'db_table': 'user',
                'ordering': ['created_at'],
            },
            managers=[
                ('objects', apps.users.models.NewUserManager()),
            ],
        ),
    ]
